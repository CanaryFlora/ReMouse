[gd_scene load_steps=21 format=3 uid="uid://bhijx2njewrtl"]

[ext_resource type="Texture2D" uid="uid://bjot8y002imec" path="res://assets/player/mouse_body.png" id="1_a2mom"]
[ext_resource type="Texture2D" uid="uid://b70nl8b2rcvd3" path="res://assets/player/mouse_hand_black.png" id="2_083ce"]
[ext_resource type="Texture2D" uid="uid://bk1lqugt2cr7x" path="res://assets/player/mouse_hand_white.png" id="3_ci5jg"]
[ext_resource type="Script" path="res://inventory/nodes/inventory_component.gd" id="4_1jf7b"]
[ext_resource type="Script" path="res://inventory/resources/inventory_slot_resource.gd" id="5_im1ui"]
[ext_resource type="Script" path="res://inventory/nodes/inventory_display_component.gd" id="6_xk82m"]
[ext_resource type="PackedScene" uid="uid://cyadkk1ro06x1" path="res://inventory/inventory_slot_scene.tscn" id="7_pljdg"]
[ext_resource type="PackedScene" uid="uid://b1rmquuux5hj6" path="res://inventory/hotbar_container.tscn" id="8_w5aqf"]
[ext_resource type="PackedScene" uid="uid://cm1s1o27qbnj" path="res://inventory/inventory_container.tscn" id="9_e7w43"]
[ext_resource type="Script" path="res://inventory/resources/inventory_use_component.gd" id="10_ao8hq"]
[ext_resource type="Script" path="res://components/player_control_movement_component.gd" id="11_eumb6"]
[ext_resource type="Script" path="res://components/entity_variable_stats/entity_variable_stats_component.gd" id="12_qpeer"]
[ext_resource type="Script" path="res://components/entity_variable_stats/stat_properties.gd" id="13_77kmy"]
[ext_resource type="Script" path="res://components/entity_effects/entity_effects_component.gd" id="14_2w4vh"]
[ext_resource type="Texture2D" uid="uid://dd8wko1sps8vm" path="res://health bar.png" id="15_mcbgu"]

[sub_resource type="GDScript" id="GDScript_sauew"]
script/source = "extends Entity
## A controllable entity that the player is meant to play as.
class_name Player

@export_group(\"Settings\")
## If the player's special mouse ability is enabled.
@export var AbilityEnabled : bool
## The CollisionPolygon2D of the entity.
@export var EntityCollisionNode : Node2D
## The CollisionPoylgon2D which will be used when dashing if the player is a Roachmouse.
@export var DashHitbox : Node2D

@onready var HandLeft : Node = $LeftPoint/HandLeft
@onready var HandRight : Node = $RightPoint/HandRight
@onready var LeftPoint : Node = $LeftPoint
@onready var RightPoint : Node = $RightPoint


var CurrentHand : String = \"left\"
var LeftAttackOnCooldown : bool
var RightAttackOnCooldown : bool
var SwitchHandOnCooldown : bool
var SwitchHandCooldownLength : float = 0.5
var GlobalAttackCooldownLength : float = 0.3
var PreciseMovementEnabled : bool
var CurrentlyAttacking : bool

func _ready():
	Panku.gd_exprenv.register_env(\"Player\", self)
	Effect.apply_effect(\"dashcooldown\", 5)



func _physics_process(delta):
	print(Effect.entity_has_effect(\"dashcooldown\"))
	if CheckAttack() == true:
		OneHandAttack()
	if Movement.PreciseMovementEnabled == false:
		# offset the angle difference by subtracting 90 deg
		var HandLeftToMouseAngle : int = rad_to_deg(HandLeft.get_angle_to(get_global_mouse_position())) - 90
		var HandRightToMouseAngle : int = rad_to_deg(HandRight.get_angle_to(get_global_mouse_position())) - 90
		# set closer to mouse variable, reset opposite hand to normal position
		var tween : Tween = get_tree().create_tween()
		if CurrentHand == \"left\":
			tween.tween_property(LeftPoint, \"rotation_degrees\", rotation_cap(HandLeftToMouseAngle, false), 0.1)
		elif CurrentHand == \"right\":
			tween.tween_property(RightPoint, \"rotation_degrees\", rotation_cap(HandRightToMouseAngle, true), 0.1)


func rotation_cap(val : int, invert : bool) -> int:
	if invert == false:
		if val < -120 and val > -300:
			val = 90
		if val < -40:
			val = -40
	if invert == true:
		if val < -90 and val > -300:
			val = -90
		if val > 40:
			val = 40
	return val

func _unhandled_input(event):
	# switch hands with right click
	if event.is_action_pressed(\"RightClick\") and CurrentHand == \"left\":
		var eTween : Tween = get_tree().create_tween()
		CurrentHand = \"right\"
		eTween.tween_property(LeftPoint, \"rotation_degrees\", 0, 0.1)
		if SwitchHandOnCooldown == false:
			SwitchHandOnCooldown = true
			await get_tree().create_timer(SwitchHandCooldownLength).timeout
			SwitchHandOnCooldown = false
	elif event.is_action_pressed(\"RightClick\") and CurrentHand == \"right\":
		var eTween2 : Tween = get_tree().create_tween()
		CurrentHand = \"left\"
		eTween2.tween_property(RightPoint, \"rotation_degrees\", 0, 0.1)
		if SwitchHandOnCooldown == false:
			SwitchHandOnCooldown = true
			await get_tree().create_timer(SwitchHandCooldownLength).timeout
			SwitchHandOnCooldown = false
######################################################################################################
	if event.is_action_pressed(\"LeftClick\"):
		CurrentlyAttacking = true
	elif event.is_action_released(\"LeftClick\"):
		CurrentlyAttacking = false
	
	
######################################################################################################
	if event.is_action_pressed(\"AbilityKey\") and Effect.entity_has_effect(\"dashcooldown\") == false:
		Movement.MovementSpeedCopy = Movement.MovementSpeed
		Movement.MovementSpeed = Movement.MovementSpeed * 2.5
		Movement.RotationTime = 0.1
	elif event.is_action_released(\"AbilityKey\"):
		Movement.MovementSpeed = Movement.MovementSpeedCopy
		Movement.RotationTime = 0.2
######################################################################################################

func CheckAttack() -> bool:
	if SwitchHandOnCooldown == false and CurrentlyAttacking == true:
		return true
	else:
		return false


func OneHandAttack() -> void:
	match CurrentHand:
		\"left\":
			if LeftAttackOnCooldown == false:
				LeftAttackOnCooldown = true
				# move hand forward
				var tween3 : Tween = get_tree().create_tween()
				tween3.tween_property(HandLeft, \"position\", Vector2(HandLeft.position.x, HandLeft.position.y + 50), 0.2)
				await get_tree().create_timer(0.2).timeout
				# move hand back
				var tween4 : Tween = get_tree().create_tween()
				tween4.tween_property(HandLeft, \"position\", Vector2(-3, 10), 0.2)
				await get_tree().create_timer(GlobalAttackCooldownLength).timeout
				LeftAttackOnCooldown = false
		\"right\":
			if RightAttackOnCooldown == false:
				RightAttackOnCooldown = true
				var tween5 : Tween = get_tree().create_tween()
				tween5.tween_property(HandRight, \"position\", Vector2(HandRight.position.x, HandRight.position.y + 50), 0.2)
				await get_tree().create_timer(0.2).timeout
				var tween6 : Tween = get_tree().create_tween()
				tween6.tween_property(HandRight, \"position\", Vector2(3, 10), 0.2)
				await get_tree().create_timer(GlobalAttackCooldownLength).timeout
				RightAttackOnCooldown = false


#	if Input.is_action_pressed(\"DashKey\") and dashOnCooldown == false and dashEnabled == true:
#		# set dash to be on cooldown, increase speed, enable dash hitbox
#		dashOnCooldown = true
##		print(\"pressed\")
#		movementSpeed =  movementSpeed * 2.5
#		entityCollisionNode.set_deferred(\"disabled\", true)
#		dashHitbox.set_deferred(\"disabled\", false)
#		await get_tree().create_timer(0.3).timeout
#		# revert changes, apply cd effect
#		movementSpeed = movementSpeed / 2.5
#		entityCollisionNode.set_deferred(\"disabled\", false)
#		dashHitbox.set_deferred(\"disabled\", true)
#		# apply dash cd effect








func _on_entity_variable_stats_component_stat_reached_max_value(StatPropertiesResource):
	VariableStats.StatsArray.erase(StatPropertiesResource)
"

[sub_resource type="CircleShape2D" id="CircleShape2D_al3ms"]
radius = 10.0499

[sub_resource type="RectangleShape2D" id="RectangleShape2D_u6lyv"]
size = Vector2(49, 116)

[sub_resource type="Resource" id="Resource_5ccnb"]
script = ExtResource("5_im1ui")

[sub_resource type="Resource" id="Resource_xuwlo"]
script = ExtResource("13_77kmy")
StatName = &"Health"
MinValue = 0.0
MaxValue = 80.0
StartingValue = 0.0
Decay = 0.0
Gain = 1.0
IncrementRate = 0.1
ProgressBarNodePath = NodePath("../UI/TextureProgressBar")

[node name="Mouse" type="CharacterBody2D"]
scale = Vector2(0.9, 1)
collision_layer = 16
collision_mask = 6
scrip